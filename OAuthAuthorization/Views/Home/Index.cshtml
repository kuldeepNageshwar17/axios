@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>


            <button id="AuthenticaRequest">
                Axios Authenticate Request
            </button>
            <button id="UnAuthenticaRequest">
                Axios Unothenticate Request
            </button>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>

@section scripts{

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.js" integrity="sha256-XmdRbTre/3RulhYk/cOBUMpYlaAp2Rpo/s556u0OIKk=" crossorigin="anonymous"></script>
    <script>

        axios.interceptors.response.use((response) => {
            return response
        }, function (error) {

            if (error.response.status === 401) {
              location.replace("/account/Login")
            return Promise.reject(error);
        }

       if (error.response.status === 401 && !originalRequest._retry) {

            originalRequest._retry = true;
            const refreshToken = localStorageService.getRefreshToken();
            return axios.post('/auth/token',
                {
                    "refresh_token": refreshToken
                })
                .then(res => {
                    if (res.status === 201) {
                        localStorageService.setToken(res.data);
                        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorageService.getAccessToken();
                        return axios(originalRequest);
                    }
                })
        }
        return Promise.reject(error);
});
        $("#AuthenticaRequest").click(function () {

            axios
                .get('/api/webapi/Get')
                .then(response => {
                    debugger;
                    console.log(response);

                }).catch(error => {
                    debugger;
                    console.log(error)
                })
                .finally(() => this.loading = false)

        })

        $("#UnAuthenticaRequest").click(function () {
            axios
                .get('/api/webapi/Get/5')
                .then(response => {
                    debugger;
                    console.log(response);

                })
                .catch(error => {
                    debugger;
                    console.log(error)
                })
                .finally(() => this.loading = false)
        })

    </script>

}